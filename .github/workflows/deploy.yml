---
###################################
###################################
#                                 #
#    CLOUDFRONT DEPLOY ACTION     #
#         DEV & PROD ENVS         #
#                                 #
###################################
###################################

name: S3 Deploy for Scratch Jr Cloudfront Dist

# runs on all push events to main
# if they originate from a merged PR
on:
  push:
    branches:
      # - dev # dunno if this will be used or not
      - main

jobs:
  deploy:
    name: Scratch Jr Deploy
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    # default is 360
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CLOUDFRONT_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CLOUDFRONT_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy bundle and static file to CloudFront (S3)
        run: |
          aws s3 cp src/build/bundles ${{ secrets.S3_BUCKET }} --recursive
          aws s3 cp editions/free/src ${{ secrets.S3_BUCKET }} --recursive

      - name: Run CloudFront Invalidations
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths /*

      # running same action with different folder for static files
      # folder only accepts a single folder in string format
      - name: Deploy Static Files to S3
        uses: reggionick/s3-deploy@v3
        with:
          folder: editions/free/src
          bucket: ${{ secrets.S3_BUCKET }}
          bucket-region: ${{ secrets.S3_BUCKET_REGION }}
          dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          invalidation: /*
          private: true
          cache: 'max-age=0'
          filesToInclude: '**/*'

      - name: Set Commit Message
        id: deploy_message
        run: |
          echo "::setOutput name=commit_msg::$(git log --format=%B -n 1 $(git log -1 --pretty=format:%h))"
          echo "::setOutput name=commit_sha::$(git log -1 pretty=format:%H)"

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: deploy-release
          SLACK_COLOR: ${{ job.status }}
          SLACK_FOOTER: ""
          SLACK_LINK_NAMES: true
          SLACK_MESSAGE: ${{ steps.deploy_message.outputs.commit_msg }}
          SLACK_USERNAME: synappsBot
          SLACK_WEBHOOK: ${{ secrets.DEPLOY_SLACK_WEBHOOK }}
