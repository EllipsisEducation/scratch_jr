---
###################################
###################################
#                                 #
#    CLOUDFRONT DEPLOY ACTION     #
#         DEV & PROD ENVS         #
#                                 #
###################################
###################################

name: S3 Deploy for Scratch Jr Cloudfront Dist

# runs on all push events to main
# if they originate from a merged PR
on:
  push:
    # branches:
    #   # - dev dunno if this will be used or not
    #   - main

jobs:
  deploy:
    name: Scratch Jr Deploy
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    # default is 360
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CLOUDFRONT_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CLOUDFRONT_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        # runs a clean install
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy Bundle to S3
        uses: reggionick/s3-deploy@v3
        with:
          # folder to upload
          folder: src/build/bundles
          # upload destination
          bucket: ${{ secrets.S3_BUCKET }}
          bucket-region: ${{ secrets.S3_BUCKET_REGION }}
          # cloudfront distribution id to be invalidated
          dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          # cloudFront distribution path(s) to invalidate
          invalidation: /*
          # upload files with private ACL, needed for S3 static website hosting
          private: true
          # use this parameter to specify cache-control:
          # no-cache, no-store, must-revalidate header
          no-cache: true
          # Allows for a comma delineated Regex String
          # that matches files to include in the deployment
          filesToInclude: '.*/*,*/*'
      # running same action with different folder for static files
      - name: Deploy Static Files to S3
        uses: reggionick/s3-deploy@v3
        with:
          # folder to upload
          folder: editions/free/src
          # upload destination
          bucket: ${{ secrets.S3_BUCKET }}
          bucket-region: ${{ secrets.S3_BUCKET_REGION }}
          # cloudfront distribution id to be invalidated
          dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          # cloudFront distribution path(s) to invalidate
          invalidation: /*
          # upload files with private ACL, needed for S3 static website hosting
          private: true
          # use this parameter to specify cache-control:
          # no-cache, no-store, must-revalidate header
          no-cache: true
          # Allows for a comma delineated Regex String
          # that matches files to include in the deployment
          filesToInclude: '.*/*,*/*'
